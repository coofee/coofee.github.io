<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>react-native on Simple...</title>
    <link>http://coofee.github.io/tags/react-native/</link>
    <description>Recent content in react-native on Simple...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>coffeerene.zhao@gmail.com (Coofee)</managingEditor>
    <webMaster>coffeerene.zhao@gmail.com (Coofee)</webMaster>
    <lastBuildDate>Fri, 21 Jul 2017 17:44:38 +0800</lastBuildDate>
    
	<atom:link href="http://coofee.github.io/tags/react-native/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>catch react native IllegalViewOperationException</title>
      <link>http://coofee.github.io/post/catch-react-native-illegalviewoperationexception/</link>
      <pubDate>Fri, 21 Jul 2017 17:44:38 +0800</pubDate>
      <author>coffeerene.zhao@gmail.com (Coofee)</author>
      <guid>http://coofee.github.io/post/catch-react-native-illegalviewoperationexception/</guid>
      <description>0x00 React Native Default Exception Handler React Native官方支持在生成ReactInstanceManager时使用NativeModuleCallExceptionHandler接口来设置自己的异常处理器，防止js/react-native代码异常导致native端直接崩溃，样例代码如下：
ReactInstanceManagerBuilder builder = ReactInstanceManager.builder() .setApplication(context.getApplicationContext()) .addPackage(new MainReactPackage()) .setInitialLifecycleState(LifecycleState.BEFORE_CREATE) .setNativeModuleCallExceptionHandler(new NativeModuleCallExceptionHandler { @Override public void handleException(Exception e) { // 自己处理react-native异常. } });  0x01 com.facebook.react.uimanager.IllegalViewOperationException app发布到线上之后，仍然出现了少部分未能捕获的异常，堆栈信息如下:
com.facebook.react.uimanager.IllegalViewOperationException Trying to add unknown view tag: 500 detail: View tag:496 children(2): [ 497,498, ], viewsToAdd(1): [ [2,500], ], 1 com.facebook.react.uimanager.NativeViewHierarchyManager.manageChildren(NativeViewHierarchyManager.java:387) 2 com.facebook.react.uimanager.UIViewOperationQueue$ManageChildrenOperation.execute(UIViewOperationQueue.java:179) 3 com.facebook.react.uimanager.UIViewOperationQueue$2.run(UIViewOperationQueue.java:787) 4 com.facebook.react.uimanager.UIViewOperationQueue.flushPendingBatches(UIViewOperationQueue.java:843) 5 com.facebook.react.uimanager.UIViewOperationQueue.access$1600(UIViewOperationQueue.java:48) 6 com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback.doFrameGuarded(UIViewOperationQueue.java:889) 7 com.facebook.react.uimanager.GuardedFrameCallback.doFrame(GuardedFrameCallback.java:31) 8 com.facebook.react.modules.core.ReactChoreographer$ReactChoreographerDispatcher.doFrame(ReactChoreographer.java:129) 9 com.</description>
    </item>
    
  </channel>
</rss>